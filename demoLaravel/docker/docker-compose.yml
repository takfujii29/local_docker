version: '3.8'

services:

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - ${WEB_PORT}:80
    volumes:
      - ../:/var/www/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
    env_file:
      - ./.env
    command: /bin/sh -c "envsubst '$$BACKEND$$FRONT_PORT$$PHP_APP_PORT' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - backend

  backend:
    container_name: backend
    build: 
      context: ./backend
    volumes:
      - ../:/var/www/app
      - /root/.composer/cache
      - /root/.npm
    depends_on:
      - db

  front:
    container_name: front
    build:
      context: ../../demo_nuxt/front
    volumes:
      - ../../demo_nuxt:/app
    working_dir: /app
    tty: true
    ports:
      - ${FRONT_PORT}:3000

  db:
    image: mysql:8.0
    container_name: db
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - TZ=${TZ}
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - /var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./db/sql:/docker-entrypoint-initdb.d
 
    ports:
      - ${DB_PORT}:3306
  
networks:
  default:
    name: video_network